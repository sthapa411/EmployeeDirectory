{"version":3,"sources":["utils/DataAreaContext.js","components/DataBody/index.js","components/DataTable/index.js","components/SearchName/index.js","components/Nav/index.js","utils/API.js","components/DataArea/index.js","components/Main/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["DataAreaContext","React","createContext","DataBody","context","useContext","react_default","a","createElement","undefined","developerState","filteredUsers","name","map","_ref","date","dateArray","year","login","picture","phone","email","dob","key","uuid","data-th","className","src","medium","alt","first","last","href","target","split","join","Fragment","DataTable","id","headings","width","style","onClick","handleSort","toLowerCase","components_DataBody","SearchName","type","placeholder","aria-label","onChange","e","handleSearchChange","Nav","components_SearchName","API","axios","get","DataArea","_useState","useState","users","order","_useState2","Object","slicedToArray","setDeveloperState","useEffect","then","results","objectSpread","data","utils_DataAreaContext","Provider","value","event","filter","filteredList","item","indexOf","heading","sortedUsers","sort","b","localeCompare","components_Nav","length","components_DataTable","Main","components_DataArea","Wrapper","children","Header","App","components_Wrapper","components_Header","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kZAMeA,SAJSC,IAAMC,cAAc,KCmD3BC,EAjDA,WACb,IAAMC,EAAUC,qBAAWL,GAW3B,OACIM,EAAAC,EAAAC,cAAA,kBAC6CC,IAA5CL,EAAQM,eAAeC,cAAc,SAAqEF,IAAjDL,EAAQM,eAAeC,cAAc,GAAGC,KAChGR,EAAQM,eAAeC,cAAcE,IAAI,SAAAC,GAAiD,IAZ5EC,EACVC,EACAC,EAUwCC,EAA8CJ,EAA9CI,MAAON,EAAuCE,EAAvCF,KAAMO,EAAiCL,EAAjCK,QAASC,EAAwBN,EAAxBM,MAAOC,EAAiBP,EAAjBO,MAAOC,EAAUR,EAAVQ,IAC9E,OACEhB,EAAAC,EAAAC,cAAA,MAAIe,IAAKL,EAAMM,MACblB,EAAAC,EAAAC,cAAA,MAAIiB,UAAQ,QAAQC,UAAU,gBAC5BpB,EAAAC,EAAAC,cAAA,OACEmB,IAAKR,EAAQS,OACbC,IAAK,qBAAuBjB,EAAKkB,MAAQ,IAAMlB,EAAKmB,KACpDL,UAAU,oBAGdpB,EAAAC,EAAAC,cAAA,MAAIiB,UAAQ,OAAOC,UAAU,0BAC1Bd,EAAKkB,MADR,IACgBlB,EAAKmB,MAErBzB,EAAAC,EAAAC,cAAA,MAAIiB,UAAQ,QAAQC,UAAU,gBAC3BN,GAEHd,EAAAC,EAAAC,cAAA,MAAIiB,UAAQ,QAAQC,UAAU,gBAC5BpB,EAAAC,EAAAC,cAAA,KAAGwB,KAAM,UAAYX,EAAOY,OAAO,WAChCZ,IAGLf,EAAAC,EAAAC,cAAA,MAAIiB,UAAQ,MAAMC,UAAU,iBAjCpBX,EAkCMO,EAAIP,KAjCpBC,EAAYD,EAAKmB,MAAM,KACvBjB,EAAOD,EAAU,GAIF,CAHPA,EAAU,GACPA,EAAU,GAAGkB,MAAM,KACf,GACajB,GAAMkB,KAAK,UAkC3C7B,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6B,SAAA,QCNKC,SApCG,WACd,IAAMjC,EAAUC,qBAAWL,GAE3B,OAEIM,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,kBACXpB,EAAAC,EAAAC,cAAA,SACI8B,GAAG,QACHZ,UAAU,mDAEVpB,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACKJ,EAAQM,eAAe6B,SAAS1B,IAAI,SAAAC,GAAqB,IAAlBF,EAAkBE,EAAlBF,KAAM4B,EAAY1B,EAAZ0B,MAC1C,OACIlC,EAAAC,EAAAC,cAAA,MACIkB,UAAU,MACVH,IAAKX,EACL6B,MAAO,CAAED,SACTE,QAAS,WACLtC,EAAQuC,WAAW/B,EAAKgC,iBAG3BhC,EACDN,EAAAC,EAAAC,cAAA,QAAMkB,UAAU,iBAOpCpB,EAAAC,EAAAC,cAACqC,EAAD,UCXDC,SApBI,WACf,IAAM1C,EAAUC,qBAAWL,GAE3B,OACIM,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,aACXpB,EAAAC,EAAAC,cAAA,QAAMkB,UAAU,eACZpB,EAAAC,EAAAC,cAAA,SACIkB,UAAU,uBACVqB,KAAK,SACLC,YAAY,SACZC,aAAW,SACXC,SAAU,SAAAC,GAAC,OAAI/C,EAAQgD,mBAAmBD,MAE9C7C,EAAAC,EAAAC,cAAA,UAAQkB,UAAU,mBAAmBqB,KAAK,UAA1C,oBCDDM,MAVf,WACI,OACI/C,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,iDAEhBpB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,qBACdpB,EAAAC,EAAAC,cAAC8C,EAAD,0BCTMC,EACD,WAEL,OAAOC,IAAMC,IAAI,kDCgGNC,SA9FF,WAAM,IAAAC,EAC2BC,mBAAS,CACnDC,MAAO,GACPC,MAAO,SACPnD,cAAe,GACf4B,SAAU,CACR,CAAE3B,KAAM,QAAS4B,MAAO,OACxB,CAAE5B,KAAM,OAAQ4B,MAAO,OACvB,CAAE5B,KAAM,QAAS4B,MAAO,OACxB,CAAE5B,KAAM,QAAS4B,MAAO,OACxB,CAAE5B,KAAM,MAAO4B,MAAO,UAVTuB,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GACVjD,EADUqD,EAAA,GACMG,EADNH,EAAA,GA+EjB,OAVAI,oBAAU,WACRZ,IAAea,KAAK,SAAAC,GAClBH,EAAkBF,OAAAM,EAAA,EAAAN,CAAA,GACbtD,EADY,CAEfmD,MAAOQ,EAAQE,KAAKF,QACpB1D,cAAe0D,EAAQE,KAAKF,cAG/B,CAAC3D,IAGFJ,EAAAC,EAAAC,cAACgE,EAAgBC,SAAjB,CACEC,MAAO,CAAEhE,iBAAgB0C,mBAxBF,SAAAuB,GACzB,IAAMC,EAASD,EAAM1C,OAAOyC,MACtBG,EAAenE,EAAemD,MAAMe,OAAO,SAAAE,GAE/C,OAAiD,IADpCA,EAAKlE,KAAKkB,MAAMc,cACfmC,QAAQH,EAAOhC,iBAG/BsB,EAAkBF,OAAAM,EAAA,EAAAN,CAAA,GACftD,EADc,CAEjBC,cAAekE,MAegClC,WAnE9B,SAAAqC,GACY,YAAzBtE,EAAeoD,MACfI,EAAkB,CACdJ,MAAM,WAGVI,EAAkB,CACdJ,MAAM,YAId,IAuBMmB,EAAcvE,EAAeC,cAAcuE,KAvB9B,SAAC3E,EAAG4E,GACrB,MAA6B,WAAzBzE,EAAeoD,WACErD,IAAfF,EAAEyE,GACG,OACiBvE,IAAf0E,EAAEH,IACH,EACa,SAAZA,EACFzE,EAAEyE,GAASlD,MAAMsD,cAAcD,EAAEH,GAASlD,OAE1CqD,EAAEH,GAAWzE,EAAEyE,QAGTvE,IAAfF,EAAEyE,GACK,OACevE,IAAf0E,EAAEH,IACD,EACU,SAAXA,EACAG,EAAEH,GAASlD,MAAMsD,cAAc7E,EAAEyE,GAASlD,OAEtDqD,EAAEH,GAAWzE,EAAEyE,KAMdd,EAAkBF,OAAAM,EAAA,EAAAN,CAAA,GACbtD,EADY,CAEfC,cAAesE,QA+Bf3E,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,aACZhB,EAAeC,cAAc2E,OAAS,EAC7ChF,EAAAC,EAAAC,cAAC+E,EAAD,MACCjF,EAAAC,EAAAC,cAAA,sBClFQgF,MARf,WACI,OACIlF,EAAAC,EAAAC,cAAAF,EAAAC,EAAA6B,SAAA,KACA9B,EAAAC,EAAAC,cAACiF,EAAD,cCGOC,MAPf,SAAA5E,GAA+B,IAAX6E,EAAW7E,EAAX6E,SAChB,OACIrF,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,WACTiE,UCMCC,MATf,WACI,OACItF,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,UACXpB,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,iGCUGqF,MAXf,WACE,OACEvF,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,OAChBpB,EAAAC,EAAAC,cAACsF,EAAD,KACExF,EAAAC,EAAAC,cAACuF,EAAD,MACAzF,EAAAC,EAAAC,cAACwF,EAAD,SCVeC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCDNC,IAASC,OAAOjG,EAAAC,EAAAC,cAACgG,EAAD,MAASC,SAASC,eAAe,SDgG3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzC,KAAK,SAAA0C,GACjCA,EAAaC","file":"static/js/main.913c3ee1.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DataAreaContext = React.createContext({\n\n});\n\nexport default DataAreaContext;","import React, { useContext } from \"react\";\nimport \"./DataBody.css\"\nimport DataAreaContext from \"../../utils/DataAreaContext\"\n\nconst DataBody = () => {\n    const context = useContext(DataAreaContext);\n\n    function formatDate(date){\n        const dateArray = date.split(\"-\");\n        const year = dateArray[0];\n        const month = dateArray[1];\n        const dayArray = dateArray[2].split(\"T\");\n        const day = dayArray[0];\n        const formattedDate =[month, day, year].join(\"-\");\n        return formattedDate;\n    }\n    return (\n        <tbody>\n        {context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\n          context.developerState.filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\n            return (\n              <tr key={login.uuid}>\n                <td data-th=\"Image\" className=\"align-middle\">\n                  <img\n                    src={picture.medium}\n                    alt={\"profile image for \" + name.first + \" \" + name.last}\n                    className=\"img-responsive\"\n                  />\n                </td>\n                <td data-th=\"Name\" className=\"name-cell align-middle\">\n                  {name.first} {name.last}\n                </td>\n                <td data-th=\"Phone\" className=\"align-middle\">\n                  {phone}\n                </td>\n                <td data-th=\"Email\" className=\"align-middle\">\n                  <a href={\"mailto:\" + email} target=\"__blank\">\n                    {email}\n                  </a>\n                </td>\n                <td data-th=\"DOB\" className=\"align-middle\">\n                  {formatDate(dob.date)}\n                </td>\n              </tr>\n            );\n          })\n        ) : (\n          <></>\n        )}\n      </tbody>\n    );\n  }\n  \n  export default DataBody;","import React, { useContext } from \"react\";\nimport DataBody from \"../DataBody\";\nimport \"./DataTable.css\";\nimport DataAreaContext from \"../../utils/DataAreaContext\";\n\nconst DataTable = () => {\n    const context = useContext(DataAreaContext);\n\n    return (\n\n        <div className=\"datatable mt-5\">\n            <table\n                id=\"table\"\n                className=\"table table-striped table-hover table-condensed\"\n            >\n                <thead>\n                    <tr>\n                        {context.developerState.headings.map(({ name, width }) => {\n                            return (\n                                <th\n                                    className=\"col\"\n                                    key={name}\n                                    style={{ width }}\n                                    onClick={() => {\n                                        context.handleSort(name.toLowerCase());\n                                    }}\n                                >\n                                    {name}\n                                    <span className=\"pointer\"></span>\n                                </th>\n                            );\n                        })}\n                    </tr>\n                </thead>\n\n                <DataBody />\n            </table>\n        </div>\n    );\n}\n\nexport default DataTable;","import React, { useContext } from \"react\";\nimport \"./SearchName.css\";\nimport DataAreaContext from \"../../utils/DataAreaContext\";\n\nconst SearchName = () => {\n    const context = useContext(DataAreaContext);\n\n    return (\n        <div className=\"searchbox\">\n            <form className=\"form-inline\">\n                <input\n                    className=\"form-control mr-sm-2\"\n                    type=\"search\"\n                    placeholder=\"Search\"\n                    aria-label=\"Search\"\n                    onChange={e => context.handleSearchChange(e)}\n                />\n                <button className=\"btn my-2 my-sm-0\" type=\"submit\">\n                    Search\n                 </button>\n            </form>\n        </div>\n    );\n}\nexport default SearchName;","import React from 'react';\nimport SearchName from \"../SearchName\";\n\n\nimport \"./Nav.css\";\n\nfunction Nav() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n\n       <div className=\"search-area col-4\">\n        <SearchName />\n    </div>\n</nav>\n    );\n}\nexport default Nav;","import axios from \"axios\";\n\nexport default{ \n    getUsers:function(){    \n\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n    }\n};","import React, {useState, useEffect} from \"react\";\nimport DataTable from \"../DataTable\";\nimport Nav from \"../Nav\";\nimport API from \"../../utils/API\";\nimport \"./DataArea.css\";\nimport DataAreaContext from \"../../utils/DataAreaContext\"\n\nconst DataArea = () => {\n      const [developerState, setDeveloperState] = useState({\n        users: [],\n        order: \"ascend\",\n        filteredUsers: [],\n        headings: [\n          { name: \"Image\", width: \"10%\", },\n          { name: \"Name\", width: \"10%\", },\n          { name: \"Phone\", width: \"20%\", },\n          { name: \"Email\", width: \"20%\", },\n          { name: \"DOB\", width: \"10%\", }\n        ]\n      });\n    \n      const handleSort = heading => {\n        if (developerState.order === \"descend\") {\n            setDeveloperState({\n                order:\"ascend\"\n            })\n        } else{\n            setDeveloperState({\n                order:\"descend\"\n            })\n        }\n    \n        const compareFnc = (a, b) => {\n          if (developerState.order === \"ascend\") {\n            if (a[heading] === undefined) {\n              return 1;\n            } else if (b[heading] === undefined) {\n              return -1;\n            } else if (heading === \"name\") {\n              return a[heading].first.localeCompare(b[heading].first);\n            } else {\n              return b[heading] - a[heading];\n            } \n          } else {\n        if (a[heading] === undefined){\n            return 1;\n        } else if (b[heading] === undefined){\n            return -1;\n        } else if (heading ===\"name\"){\n            return b[heading].first.localeCompare(a[heading].first);\n        } else {\nreturn b[heading]-  a[heading];\n        }\n    }\n    }\n        const sortedUsers = developerState.filteredUsers.sort(compareFnc);\n\n        setDeveloperState({\n          ...developerState,\n          filteredUsers: sortedUsers\n});\n\n };\n   \n      const handleSearchChange = event => {\n        const filter = event.target.value;\n        const filteredList = developerState.users.filter(item => {\n          let values = item.name.first.toLowerCase();\n          return values.indexOf(filter.toLowerCase()) !== -1;\n        });\n    \n        setDeveloperState({ \n        ...developerState, \n        filteredUsers: filteredList });\n      };\n\n      useEffect(() => {\n        API.getUsers().then(results => {\n          setDeveloperState({\n            ...developerState,\n            users: results.data.results,\n            filteredUsers: results.data.results\n          });\n        });\n      }, [developerState]);\n    \n      return (\n        <DataAreaContext.Provider\n          value={{ developerState, handleSearchChange, handleSort }}\n        >\n          <Nav />\n          <div className=\"data-area\">\n            {developerState.filteredUsers.length > 0 \n    ? <DataTable />\n     : <div></div>\n     }\n          </div>\n        </DataAreaContext.Provider>\n      );\n    }\n    \n    export default DataArea;","import React from \"react\";\nimport DataArea from \"../DataArea/index.js\";\nimport \"./Main.css\";\n\nfunction Main (){\n    return (\n        <>\n        <DataArea />\n        </>\n    );\n};\n\nexport default Main;","import React from \"react\";\nimport \"./Wrapper.css\";\n\nfunction Wrapper ({ children }){\n    return (\n        <div className=\"wrapper\">\n            { children }\n        </div>\n    );\n}\nexport default Wrapper;","import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header () {\n    return (\n        <div className=\"header\">\n            <h1>Employee Directory</h1>\n            <p>Click on each heading to filter or use the search box to narrow your results</p>\n        </div>\n    )\n}\n\nexport default Header;\n","import React from 'react';\nimport Main from './components/Main';\nimport Wrapper from './components/Wrapper';\nimport Header from './components/Header';\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n   <Wrapper>\n     <Header />\n     <Main />\n   </Wrapper>\n    </div>\n  );\n}\n\nexport default App;","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}